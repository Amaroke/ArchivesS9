<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.emf.persistence.emf_id="_zLvQtMpMEe6jL58QWlChbw" org.eventb.texttools.text_lastmodified="1707814169625" org.eventb.texttools.text_representation="machine PreAlgo refines Computing sees C0&#10;&#10;variables&#10;    r dd current cd  // Définition des variables utilisées dans l'algorithme.&#10;&#10;invariants&#10;    @inv1 cd ⊆ ℕ  // L'ensemble cd contient des nombres naturels.&#10;    @inv2 current ∈ dd(current)  // Le nombre actuel est dans l'ensemble des diviseurs de current.&#10;    @inv3 cd = dd(current)  // L'ensemble cd est égal à l'ensemble des diviseurs de current.&#10;    @inv4 dom(dd) = 0‥current  // Le domaine de dd va de 0 à current.&#10;    @inv5 current ≤ n  // Le nombre actuel est inférieur ou égal à n.&#10;&#10;events&#10;    event INITIALISATION extends INITIALISATION&#10;    begin&#10;        @act4 cd ≔ ∅  // Initialise l'ensemble cd à vide.&#10;    end&#10;&#10;    event computing refines computing&#10;    any v&#10;    where&#10;        @grd1 n ∈ dom(d)  // Vérifie que n est dans le domaine des diviseurs.&#10;        @grd2 current = n  // Vérifie si le nombre actuel est égal à n.&#10;        @grd3 dd(n) = {1, n} ⇒ v = FALSE  // Si dd(n) contient uniquement 1 et n, alors v est faux.&#10;        @grd4 dd(n) ≠ {1, n} ⇒ v = TRUE  // Sinon, v est vrai.&#10;    then&#10;        @act1 r ≔ v  // Affecte à r la valeur de v.&#10;    end&#10;&#10;    event step1 refines step1&#10;    when&#10;        @grd1 n ∉ dom(dd)  // Vérifie que n n'est pas déjà dans le domaine de dd.&#10;        @grd2 current &lt; n  // Vérifie si le nombre actuel est inférieur à n.&#10;        @grd3 n mod (current+1) = 0  // Vérifie si n est divisible par current+1.&#10;    then&#10;        @act1 dd(current+1) ≔ dd(current) ∪ {current+1}  // Met à jour dd en ajoutant current+1 aux diviseurs.&#10;        @act2 current ≔ current +1  // Incrémente current.&#10;        @act3 cd ≔ cd ∪ {current+1}  // Met à jour cd en ajoutant current+1.&#10;    end&#10;&#10;    event step2 refines step2&#10;    when&#10;        @grd1 n ∉ dom(dd)  // Vérifie que n n'est pas déjà dans le domaine de dd.&#10;        @grd2 current &lt; n  // Vérifie si le nombre actuel est inférieur à n.&#10;        @grd3 n mod (current+1) ≠ 0  // Vérifie si n n'est pas divisible par current+1.&#10;    then&#10;        @act1 dd(current+1) ≔ dd(current)  // Met à jour dd sans ajouter current+1 aux diviseurs.&#10;        @act2 current ≔ current +1  // Incrémente current.&#10;        @act3 cd ≔ cd  // Maintient cd sans changement.&#10;    end&#10;end&#10;" version="5">
    <org.eventb.core.refinesMachine name="'" org.eventb.core.target="Computing"/>
    <org.eventb.core.seesContext name="_wsqs0MgtEe67_pe46YZ-uQ" org.eventb.core.target="C0"/>
    <org.eventb.core.event name="_wsqs0MgtEe67_pe46YZ-uR" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION" org.eventb.emf.persistence.emf_id="_zLvQmspMEe6jL58QWlChbw">
        <org.eventb.core.action name="_hG9lYMkAEe6Up_-2oojL3w" org.eventb.core.assignment="cd ≔ ∅" org.eventb.core.comment="Initialise l'ensemble cd à vide." org.eventb.core.generated="false" org.eventb.core.label="act4" org.eventb.emf.persistence.emf_id="_zLvQmcpMEe6jL58QWlChbw"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_wsqs0MgtEe67_pe46YZ-uS" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="computing" org.eventb.emf.persistence.emf_id="_zLvQospMEe6jL58QWlChbw">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="computing"/>
        <org.eventb.core.action name="_hG8-UMkAEe6Up_-2oojL3w" org.eventb.core.assignment="r ≔ v" org.eventb.core.comment="Affecte à r la valeur de v." org.eventb.core.generated="false" org.eventb.core.label="act1" org.eventb.emf.persistence.emf_id="_zLvQocpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hG-McMkAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie que n est dans le domaine des diviseurs." org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="n ∈ dom(d)" org.eventb.emf.persistence.emf_id="_zLvQncpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hG-McckAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie si le nombre actuel est égal à n." org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="current = n" org.eventb.emf.persistence.emf_id="_zLvQnspMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hG-zgMkAEe6Up_-2oojL3w" org.eventb.core.comment="Si dd(n) contient uniquement 1 et n, alors v est faux." org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="dd(n) = {1, n} ⇒ v = FALSE" org.eventb.emf.persistence.emf_id="_zLvQn8pMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hG-zgckAEe6Up_-2oojL3w" org.eventb.core.comment="Sinon, v est vrai." org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="dd(n) ≠ {1, n} ⇒ v = TRUE" org.eventb.emf.persistence.emf_id="_zLvQoMpMEe6jL58QWlChbw"/>
        <org.eventb.core.parameter name="_hG-zgskAEe6Up_-2oojL3w" org.eventb.core.generated="false" org.eventb.core.identifier="v" org.eventb.emf.persistence.emf_id="_zLvQnMpMEe6jL58QWlChbw"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_wsqs0MgtEe67_pe46YZ-uT" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="step1" org.eventb.emf.persistence.emf_id="_zLvQqspMEe6jL58QWlChbw">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="step1"/>
        <org.eventb.core.action name="_hG9lYckAEe6Up_-2oojL3w" org.eventb.core.assignment="dd(current+1) ≔ dd(current) ∪ {current+1}" org.eventb.core.comment="Met à jour dd en ajoutant current+1 aux diviseurs." org.eventb.core.generated="false" org.eventb.core.label="act1" org.eventb.emf.persistence.emf_id="_zLvQp8pMEe6jL58QWlChbw"/>
        <org.eventb.core.action name="_hG8-UckAEe6Up_-2oojL3w" org.eventb.core.assignment="current ≔ current +1" org.eventb.core.comment="Incrémente current." org.eventb.core.generated="false" org.eventb.core.label="act2" org.eventb.emf.persistence.emf_id="_zLvQqMpMEe6jL58QWlChbw"/>
        <org.eventb.core.action name="_hG8-UskAEe6Up_-2oojL3w" org.eventb.core.assignment="cd ≔ cd ∪ {current+1}" org.eventb.core.comment="Met à jour cd en ajoutant current+1." org.eventb.core.generated="false" org.eventb.core.label="act3" org.eventb.emf.persistence.emf_id="_zLvQqcpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hHABoskAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie que n n'est pas déjà dans le domaine de dd." org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="n ∉ dom(dd)" org.eventb.emf.persistence.emf_id="_zLvQpMpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hHABo8kAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie si le nombre actuel est inférieur à n." org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="current &lt; n" org.eventb.emf.persistence.emf_id="_zLvQpcpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hHAosMkAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie si n est divisible par current+1." org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="n mod (current+1) = 0" org.eventb.emf.persistence.emf_id="_zLvQpspMEe6jL58QWlChbw"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_wsqs0MgtEe67_pe46YZ-uU" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="step2" org.eventb.emf.persistence.emf_id="_zLvQsspMEe6jL58QWlChbw">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="step2"/>
        <org.eventb.core.action name="_hG_akMkAEe6Up_-2oojL3w" org.eventb.core.assignment="dd(current+1) ≔ dd(current)" org.eventb.core.comment="Met à jour dd sans ajouter current+1 aux diviseurs." org.eventb.core.generated="false" org.eventb.core.label="act1" org.eventb.emf.persistence.emf_id="_zLvQr8pMEe6jL58QWlChbw"/>
        <org.eventb.core.action name="_hHABoMkAEe6Up_-2oojL3w" org.eventb.core.assignment="current ≔ current +1" org.eventb.core.comment="Incrémente current." org.eventb.core.generated="false" org.eventb.core.label="act2" org.eventb.emf.persistence.emf_id="_zLvQsMpMEe6jL58QWlChbw"/>
        <org.eventb.core.action name="_hHABockAEe6Up_-2oojL3w" org.eventb.core.assignment="cd ≔ cd" org.eventb.core.comment="Maintient cd sans changement." org.eventb.core.generated="false" org.eventb.core.label="act3" org.eventb.emf.persistence.emf_id="_zLvQscpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hHBPwskAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie que n n'est pas déjà dans le domaine de dd." org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="n ∉ dom(dd)" org.eventb.emf.persistence.emf_id="_zLvQrMpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_hHB20MkAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie si le nombre actuel est inférieur à n." org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="current &lt; n" org.eventb.emf.persistence.emf_id="_zLvQrcpMEe6jL58QWlChbw"/>
        <org.eventb.core.guard name="_lWuKYMkAEe6Up_-2oojL3w" org.eventb.core.comment="Vérifie si n n'est pas divisible par current+1." org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="n mod (current+1) ≠ 0" org.eventb.emf.persistence.emf_id="_zLvQrspMEe6jL58QWlChbw"/>
    </org.eventb.core.event>
    <org.eventb.core.invariant name="_7mr3YMj-Ee6Up_-2oojL3w" org.eventb.core.comment="L'ensemble cd contient des nombres naturels." org.eventb.core.generated="false" org.eventb.core.label="inv1" org.eventb.core.predicate="cd ⊆ ℕ" org.eventb.emf.persistence.emf_id="_zLvQlMpMEe6jL58QWlChbw"/>
    <org.eventb.core.invariant name="_7msecMj-Ee6Up_-2oojL3w" org.eventb.core.comment="Le nombre actuel est dans l'ensemble des diviseurs de current." org.eventb.core.generated="false" org.eventb.core.label="inv2" org.eventb.core.predicate="current ∈ dd(current)" org.eventb.emf.persistence.emf_id="_zLvQlcpMEe6jL58QWlChbw"/>
    <org.eventb.core.invariant name="_7mseccj-Ee6Up_-2oojL3w" org.eventb.core.comment="L'ensemble cd est égal à l'ensemble des diviseurs de current." org.eventb.core.generated="false" org.eventb.core.label="inv3" org.eventb.core.predicate="cd = dd(current)" org.eventb.emf.persistence.emf_id="_zLvQlspMEe6jL58QWlChbw"/>
    <org.eventb.core.invariant name="_DVMbMMj_Ee6Up_-2oojL3w" org.eventb.core.comment="Le domaine de dd va de 0 à current." org.eventb.core.generated="false" org.eventb.core.label="inv4" org.eventb.core.predicate="dom(dd) = 0‥current" org.eventb.emf.persistence.emf_id="_zLvQl8pMEe6jL58QWlChbw"/>
    <org.eventb.core.invariant name="_DVNCQMj_Ee6Up_-2oojL3w" org.eventb.core.comment="Le nombre actuel est inférieur ou égal à n." org.eventb.core.generated="false" org.eventb.core.label="inv5" org.eventb.core.predicate="current ≤ n" org.eventb.emf.persistence.emf_id="_zLvQmMpMEe6jL58QWlChbw"/>
    <org.eventb.core.variable name="_ErzyMMjmEe6-Z9PCABxFkA" org.eventb.core.generated="false" org.eventb.core.identifier="r" org.eventb.emf.persistence.emf_id="_zLvQkMpMEe6jL58QWlChbw"/>
    <org.eventb.core.variable name="_plkNkMj5Ee6-Z9PCABxFkA" org.eventb.core.generated="false" org.eventb.core.identifier="dd" org.eventb.emf.persistence.emf_id="_zLvQkcpMEe6jL58QWlChbw"/>
    <org.eventb.core.variable name="_plkNkcj5Ee6-Z9PCABxFkA" org.eventb.core.generated="false" org.eventb.core.identifier="current" org.eventb.emf.persistence.emf_id="_zLvQkspMEe6jL58QWlChbw"/>
    <org.eventb.core.variable name="_7mtskMj-Ee6Up_-2oojL3w" org.eventb.core.comment="Définition des variables utilisées dans l'algorithme." org.eventb.core.generated="false" org.eventb.core.identifier="cd" org.eventb.emf.persistence.emf_id="_zLvQk8pMEe6jL58QWlChbw"/>
</org.eventb.core.machineFile>
